1. 同C语言的错误处理机制相比，C++的异常机制有什么优点。
    C++的throw很容易用任何数据结构反映错误信息。相比之下，编写error()函数在抛出异常时需要在各种变量类型上花费精力。assert()则只能直接异常退出程序，不能向上级程序报告异常信息。

    C++的catch便于对不同类型的错误做出不同的处理。相比之下，error()函数需要徒手使用各种case或者if来判断错误类型。

    c++的try，throw和catch便于用标准化的语法表达各种错误和错误处理过程，便于构成各种重试、忽略错误的中间件。

2. 分别按照语句覆盖和路径覆盖的标准设计下列伪码程序的测试用例。

START  #路径s
INPUT A, B, C
X = 0
IF A>5 AND C>5  #路径i
    THEN X = 5  #路径a
ENDIF
IF A>10 OR B<10  #路径j
    THEN X = 10  #路径b
ENDIF
PRINT X
STOP

语句覆盖：
测试1：输入异常的A，B，C（例如输入[A,B,C]==['a','b','c']）覆盖INPUT A,B,C
测试2：输入[A,B,C]==[6,9,6] 覆盖THEN X=5
测试3：输入[A,B,C]==[11,9,1] 覆盖THEN X=10

路径覆盖：
测试1：输入[A,B,C]==[6,9,6] 覆盖路径siajb
测试2：输入[A,B,C]==[6,100,6] 覆盖路径siaj
测试3：输入[A,B,C]==[11,9,1] 覆盖路径sijb
测试4：输入[A,B,C]==[1,100,1] 覆盖路径sij
